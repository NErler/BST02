sex <- sample(0:1, 20, replace = TRUE)
sex <- factor(sex, levels = 1:2, labels = c("male", "female"))
sex
sex <- factor(sex, levels = 0:1, labels = c("male", "female"))
sex
sex <- sample(0:1, 20, replace = TRUE)
sex <- factor(sex, levels = 0:1, labels = c("male", "female"))
sex
dat
dat$weight
dat$height
mean(dat$weight)
mean(dat$height)
mean(dat)
View(dat)
mean(dat$weight)
mean(dat$height)
mean_weight <- mean(dat$weight)
mean_height <- mean(dat$height)
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
mean_weight
dat
dat$sex
dat$Sex
dat$weight
sum(dat$weight)
sum_weight <- sum(dat$weight)
sum_height <- sum(dat$height)
sum_weight
sum_height
sum_height
sum_height
sum_height
sum_height
sum_height
sum_height
sum_height
sum_height
sum_height
sum_height
sum_weight; sum_height
patient = c(1:20)
patient
patient <- c(1:20)
patient
is.na(dat)
is.na(dat$height)
is.na(dat)
!is.na(dat)
is.na(dat$height)
sum(is.na(dat$height))
sum(is.na(dat))
sum(!is.na(dat))
sum(!is.na(dat$height))
is.finite(dat)
is.finite(dat$height)
is.finite(dat$height)
!is.finite(dat$height)
sum(is.finite(dat$height))
sum(is.finite(dat$height))
sum(is.finite(dat$height))
sum(is.finite(dat$height))
sum(is.finite(dat$height))
sum(is.finite(dat$height))
sum(is.finite(dat$height))
sum(is.finite(dat$height))
sum(is.finite(dat$height))
sum(is.finite(dat$height))
sum(is.finite(dat$height))
sum(is.finite(dat$height))
height
library(reshape2)
library(foreign)
library(xlsx)
library(lattice)
library(knitr)
### Stating with Examples
set.seed(2015+1) ## this is in order to......
patient <- c(1:20)
height <- rnorm(20, 1.70, 0.1)
weight <- rnorm(20, 70, 10)
sex <- sample(0:1, 20, replace = TRUE)
sex <- factor(sex, levels = 0:1, labels = c("male", "female"))
dat <- data.frame(patient, height, weight, sex)
### Using R Commands
## What is the average weight and height in this dataset
mean(dat$weight)
mean(dat$height)
mean(dat)
#
mean_weight <- mean(dat$weight)
mean_height <- mean(dat$height)
mean_weight
mean_height
sum_weight <- sum(dat$weight)
sum_height <- sum(dat$height)
sum_weight; sum_height
## case sensitive
dat$sex
dat$Sex
## missing data
sum(is.na(dat))
sum(is.na(dat$height))
sum(!is.na(dat$height))
sum(is.finite(dat$height))
## logical
dat$weight_65higher <- dat$weight > 65
head(dat)
## round
dat$weight <- round(dat$weight, digits = 2)
dat$height <- round(dat$height, digits = 2)
head(dat)
## dichotomous variable
as.numeric(dat$weight_65higher)
head(dat)
# why do I not get the new dichotomous variable?
dat$weight_65higher <- as.numeric(dat$weight_65higher)
head(dat)
is.numeric(dat$weight_65higher)
## Investigate a specific object
objects()
str(dat)
## Calculate the BMI
dat$weight/(dat$height^2)
head(dat)
dat$BMI <- dat$weight/(dat$height^2)
head(dat)
dat$BMI <- round(dat$BMI, digits = 2)
head(dat)
mean(dat$BMI)
## Create matrices
weight_heightC <- cbind(dat$weight, dat$height)
weight_heightR <- rbind(dat$weight, dat$height)
matrix(weight_heightR, 20, 2)
matrix(weight_heightR, 20, 2, byrow = T)
# TAKE CARE
weight_heightC <- cbind(c(1:4), c(1:8))
## Create data frames
DF <- data.frame(Age = c(30, 20, 50),
Sex = c("male", "female", "female"),
Drug = c("yes", "yes", "no"))
DF <- data.frame(Age = runif(30, 1, 80),
Sex = sample(1:2, 30, replace = TRUE),
Drug = sample(1:3, 30, replace = TRUE))
head(DF)
## Create lists
myList <- list(x = c(1:20), sex = c("male", "female"))
myList
### Data Manipulation
## Set weight_cutoff as factor
dat$weight_65higher <- factor(dat$weight_65higher, levels = c(0:1),
labels = c("low","high"))
## Transform variables
dat$weightST <- (dat$weight-mean(dat$weight))/(sd(dat$weight))
## Wide/long format
set.seed(2015+1)
dat$weightBase <- dat$weight
dat$weight6m <- dat$weight + rnorm(20, 0, 4)
dat$weight1y <- dat$weight6m + rnorm(20, 0, 4)
head(dat)
dat[, c(2, 3, 6, 7, 8, 9, 10)] <- round(dat[, c(2, 3, 6, 7, 8, 9, 10)], digits = 2)
dat[, c("height","weight","BMI","weightST","weightBase", "weight6m",
"weight1y")] <- round(dat[,c("height", "weight","BMI","weightST","weightBase",
"weight6m","weight1y")], digits = 2)
datNew <- dat[, c(1,2,4,8,9,10)]
head(datNew)
datLong <- melt(datNew, id.var = c("patient", "height", "sex"), variable = "time",
value.name = "weight")
head(datLong)
levels(datLong$time) <- c("baseline", "6months", "1year")
head(datLong)
datLong <- datLong[order(datLong$patient, datLong$time), ]
head(datLong)
## Missings
?mean
### Importing data
#read.spss("C:\\Documents and Settings\\User\\Data\\file.sav")
###Data exploration
## Calculate the mean and sd for weight
mean(dat$weight)
mean(dat$weight, na.rm = TRUE)
sd(dat$weight, na.rm = TRUE)
## Calculate the mean and sd for height
mean(dat$height)
mean(dat$height, na.rm = TRUE)
sd(dat$height, na.rm = TRUE)
## Calculate the average weight for males and females
tapply(dat$weight, dat$sex, mean)
tapply(dat$weight, dat$sex, sd)
## Calculate the average height for males and females
tapply(dat$height, dat$sex, mean)
tapply(dat$height, dat$sex, sd)
## Calculate the median and IQR for weight
median(dat$weight)
median(dat$weight, na.rm = TRUE)
IQR(dat$weight) #IQR = Q75% - Q25%
## Calculate the mean and sd for BMI
mean(dat$BMI)
mean(dat$BMI, na.rm = TRUE)
sd(dat$BMI, na.rm = TRUE)
## Calculate the frequencies and probabilities
table(dat$sex)
prop.table(table(dat$sex))
## Calculate the mean weight per patient
tapply(datLong$weight, datLong$patient, mean)
## Calculate the mean weight of all patients after 1 year
datWide <- datLong[tapply(row.names(datLong), datLong$patient, tail, 1), ]
mean(datWide$weight)
## Calculate the mean weight of all patients at baseline
datWide2 <- datLong[tapply(row.names(datLong), datLong$patient, head, 1), ]
mean(datWide2$weight)
## Numerical summaries
summary(dat)
### Indexing
height
height[3]
dat
dat$height
dat$height[3]
dat
dat
dat[,2]
dat[3,2]
sex
sex[10]
dat
dat[10, 4]
names(dat)
dat[5, ]
dat[5, ]
dat[5]
dat
dat[5]
dat[[5]]
dat[,5]
x <- -20:10
x
x[1]
x[c(2,4,6,8)]
dat
dat$sex
dat[["sex"]]
dat["sex"]
dat[["weight"]]
dat["weight"]
dat[["weight"]]
dim(dat[["weight"]])
dat["weight"]
dim(dat["weight"])
dim(dat)
length(dat[["weight"]])
length(dat)
x <- c("male", "female", "female", "male", "male")
x
x[x == "male"]
x <- c("a" = 10, "b" = 30, "c" = 45)
x
x["c"]
dat$weight
dat$sex == "female"
dat$weight[dat$sex == "female"]
dat$sex == "female"
dat$sex == "male"
dat$height[dat$sex == "male"]
dat$height
dat$height
dat$sex == "male"
dat$height[dat$sex == "male"]
dat$sex == "female"
dat[dat$sex == "female", ]
dat$sex != "male"
dat$sex == "female"
dat[dat$sex != "male", ]
dat$height > 1.65
dat$weight[dat$height > 1.65]
dat[dat$height > 1.65, "weight"]
dat$sex == "female"
dat$height > 1.70
dat$height[[dat$sex == "male"]]
dat[[dat$sex == "male"]]
dat[dat$sex == "male"]
dat[dat$sex == "male",]
dat[dat$sex == "male", c("patient")]
dat[dat$sex == "male", c("patient", "sex")]
dat[dat$height > 1.70, c("patient", "height")]
dat$sex == "female" & dat$height > 1.70
dat$weight[dat$sex == "female" & dat$height > 1.70]
dat$sex == "male" | dat$height > 1.80
dat$weight[dat$sex == "male" | dat$height > 1.80]
dat[dat$sex == "male" | dat$height > 1.80]
dat[dat$sex == "male" | dat$height > 1.80, ]
dat[dat$sex == "female" & dat$height > 1.70, ]
is.na(dat$weight)
!is.na(dat$weight)
dat[!is.na(dat$weight), ]
is.na(dat$weight)
dat[is.na(dat$weight), ]
dim(dat[is.na(dat$weight), ])
duplicated(datLong$patient)
datLong$patient
duplicated(datLong$patient)
!duplicated(datLong$patient)
datLong[!duplicated(datLong$patient), ]
datLong
datLong$time == "6months"
datLong[datLong$time == "6months", ]
datLong$time == c("6months", "1year")
datLong[datLong$time == c("6months", "1year"), ]
x <- -20:10
x <- c(-20:10)
x
x > 5
x[x > 5]
x > 0 & x <= 8
x[x > 0 & x <= 8]
x > 5 | x < -5
x[x > 5 | x < -5]
x!=0
x[x!=0]
is.na(x)
x[is.na(x)]
x[is.na(x)]
x[!is.na(x)]
1:20
mat <- matrix(1:20, 5, 4)
mat
mat[1:2, ]
mat[ , 1:2]
mat[ , c(1, 4)]
mat
mat[3, mat[3, ] <= 8]
myList
myList[[1]]
myList[[2]]
myList$sex
myList[[1]][1:10]
myList$x
myList[[1]]
myList[[1]][1:10]
myList[[1]]
myList[1]
myList[[1]]
dim(myList[[1]])
myList[1]
dim(myList[1])
myList
dim(myList)
Sex <- sample(0:1, 50, replace = TRUE)
Sex
Age <- sample(20:80, 50, replace = TRUE)
Age
Sex <- factor(Sex, levels = c(0:1), labels = c("female", "male"))
Sex
factor(Age)
AgeCat <- Age > 50
AgeCat
as.numeric(Age > 50)
AgeCat <- as.numeric(Age > 50)
AgeCat
AgeCat <- factor(AgeCat, levels = c(0:1), labels = c("young", "old"))
AgeCat
Age
Age <- (Age - mean(Age))/sd(Age)
Age
Age
DF <- data.frame(Sex, age, AgeCat)
DF <- data.frame(Sex, Age, AgeCat)
DF
DF <- data.frame("Gender" = Sex, "StandardizedAge" = Age, "DichotomousAge" = AgeCat)
DF
dim(DF)
Trearment <- sample(1:2, 150, replace = TRUE)
Trearment
Weight <- sample(50:100, 150, replace = TRUE)
Weight
Treatment <- sample(1:2, 150, replace = TRUE)
Treatment <- factor(Treatment, levels = c(0:1), labels = c("no", "yes"))
Treatment
Treatment <- sample(1:2, 150, replace = TRUE)
Treatment
Weight <- sample(50:100, 150, replace = TRUE)
Treatment <- factor(Treatment, levels = c(0:1), labels = c("no", "yes"))
Treatment <- factor(Treatment, levels = c(1:2), labels = c("no", "yes"))
Treatment
Treatment <- sample(1:2, 150, replace = TRUE)
Weight <- sample(50:100, 150, replace = TRUE)
Treatment <- factor(Treatment, levels = c(0:1), labels = c("no", "yes"))
Treatment
Treatment <- sample(1:2, 150, replace = TRUE)
Weight <- sample(50:100, 150, replace = TRUE)
Treatment <- factor(Treatment, levels = c(1:2), labels = c("no", "yes"))
Treatment
Weigth
Weight
Weight <- Weight * 1000
Weight
data.frame(Treatment, Weight)
let <- letters[1:9]
let
LETTERS[1:9]
mat <- matrix(c(1:4), 2, 2)
mat
mat <- matrix(c(1:4), 2, 2, byrow = TRUE)
mat
sex <- sample(1:2, 50, replace = TRUE)
sex
sex <- sample(1:2, 50, replace = TRUE)
sex <- factor(sex, levels = c(1:2), labels = c("males", "females"))
sex
my_list <- list(let = let, mat = mat, sex = sex)
my_list
set.seed(2018)
dat <- data.frame(
id = rep(c(1:2), each = 5),
sex = rep(c("male", "female"), each = 5),
value = rnorm(10)
)
dat1
dat
set.seed(2018)
dat <- data.frame(
id = rep(c(1:2), each = 5),
sex = rep(c("male", "female"), each = 5),
time = rep(c(1:5), times = 2),
value = rnorm(10)
)
dat
reshape(dat, idvar = "id", timevar = "time", direction = "wide")
set.seed(2018)
dat <- data.frame(
id = rep(c(1:2), each = 5),
sex = rep(c("male", "female"), each = 5),
time = rep(c(1:5), times = 2),
value = rnorm(10)
)
dat
reshape(dat, idvar = "id", timevar = "time", direction = "wide")
?reshape
reshape(dat, idvar = "id", timevar = "time", direction = "wide",
v.names = "value")
dat
dat <- read.spss("Cancer.sav", to.data.frame = TRUE)
library(foreigh)
library(foreign)
dat <- read.spss("Cancer.sav", to.data.frame = TRUE)
setwd("C:/Users/Elrozy/Desktop/rcoursenihes/practical")
dat <- read.spss("Cancer.sav", to.data.frame = TRUE)
res <- t.test(dat$AGE[dat$TRT == 0], dat$AGE[dat$TRT == 1])
res$p.value
res$conf.int
mean1 <- res$estimate[1]
mean2 <- res$estimate[2]
diffres <- res$estimate[1] - res$estimate[2]
lowCI <- res$conf.int[1]
upCI <- res$conf.int[2]
pVal <- res$p.value
Restest <- data.frame(mean1 = mean1, mean2 = mean2, diffres = diffres,
lowCI = lowCI, upCI = upCI, pVal = pVal)
dat$WEIGHINcat <- as.numeric(dat$WEIGHIN >= mean(dat$WEIGHIN))
res1 <- t.test(dat$AGE[dat$TRT == 0], dat$AGE[dat$TRT == 1])
res2 <- t.test(dat$AGE[dat$WEIGHINcat == 0], dat$AGE[dat$WEIGHINcat == 1])
results <- c(res1$p.value, res2$p.value)
bonf <- 0.05/length(results)
if (results[1] >= bonf) {
print("H0 is not rejected")
} else {
print("H0 is rejected")
}
if (results[2] >= bonf) {
print("H0 is not rejected")
} else {
print("H0 is rejected")
}
if (results >= bonf) {
print("H0 is not rejected")
} else {
print("H0 is rejected")
}
fm4 <- lm(WEIGHIN ~ TRT + STAGE*AGE, data = dat)
summary(fm4)
Pred <- function(treatment, stage, age){
coeffi <- coef(fm4)
newdata <- c(1, treatment, stage, age, stage*age)
newdata %*% coeffi
}
treatment <- 1
stage <- 2
age <- 77
xyplot(WEIGHIN ~ AGE | TRT, data = dat, xlab = "age", ylab = "weight",
main = "weight vs age")
library(lattice)
xyplot(WEIGHIN ~ AGE | TRT, data = dat, xlab = "age", ylab = "weight",
main = "weight vs age")
dat$TRT <- factor(dat$TRT, levels = c(0:1), labels = c("NO", "YES"))
xyplot(WEIGHIN ~ AGE | TRT, data = dat, xlab = "age", ylab = "weight",
main = "weight vs age")
